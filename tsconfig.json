// http://json.schemastore.org/tsconfig
{
  "compilerOptions": {
    "target": "esnext", // 目标语言的版本
    "module": "esnext", // 生成代码的模板标准
    "strict": true, // 开启所有严格的类型检查
    "jsx": "preserve",
    "importHelpers": true, // 通过tslib引入helper函数，文件必须是模块
    "moduleResolution": "node", // 模块解析策略，ts默认用node的解析策略，即相对的方式导入
    "skipLibCheck": true,
    "resolveJsonModule": true, // Enable importing .json files
    "esModuleInterop": true, // 允许export=导出，由import from 导入
    "allowSyntheticDefaultImports": true,
    "sourceMap": true, // 生成目标文件的sourceMap文件
    "baseUrl": ".", // 解析非相对模块的基地址，默认是当前目录
    "types": ["webpack-env"], // 加载的声明文件包
    // 路径映射，相对于baseUrl
    "paths": {
      "@/*": ["src/*"],
      "@examples/*": ["examples/*"]
    },
    // TS需要引用的库，即声明文件
    "lib": ["esnext", "dom", "dom.iterable", "scripthost"]
  },
  // 需要编译的文件或目录
  "include": [
    "examples/**/*.ts",
    "examples/**/*.tsx",
    "examples/**/*.vue",
    "src/**/*.ts",
    "src/**/*.tsx",
    "src/**/*.vue",
    "types/**/*.d.ts"
  ],
  // 排除的文件或文件夹
  "exclude": ["node_modules"]
  // extends: 引入其他配置文件，继承配置
  // 把基础配置抽离成tsconfig.base.json文件，然后引入
  // "extends": "./tsconfig.base.json"
}
